(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{143:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return s})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),b=(a(0),a(187)),c={id:"_urx_actions_.statefulstream",title:"Interface: StatefulStream<T>",sidebar_label:"StatefulStream"},s={unversionedId:"api/interfaces/_urx_actions_.statefulstream",id:"api/interfaces/_urx_actions_.statefulstream",isDocsHomePage:!1,title:"Interface: StatefulStream<T>",description:'"urx/actions".StatefulStream',source:"@site/docs/api/interfaces/_urx_actions_.statefulstream.md",slug:"/api/interfaces/_urx_actions_.statefulstream",permalink:"/api/interfaces/_urx_actions_.statefulstream",editUrl:"https://github.com/petyosi/react-virtuoso/edit/master/site/docs/api/interfaces/_urx_actions_.statefulstream.md",version:"current",sidebar_label:"StatefulStream",sidebar:"someSidebar",previous:{title:"Interface: Publisher<T>",permalink:"/api/interfaces/_urx_actions_.publisher"},next:{title:"Interface: Stream<T>",permalink:"/api/interfaces/_urx_actions_.stream"}},i=[{value:"Type parameters",id:"type-parameters",children:[]},{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Callable",id:"callable",children:[]}],l={rightToc:i};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("p",null,Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_actions_"}),'"urx/actions"'),".StatefulStream"),Object(b.b)("p",null,"Just like ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/interfaces/_urx_actions_.stream"}),"streams"),", stateful streams present both input and output ends of a stream.\nA single stream instance can be both subscribed to and published in.\nStateful Streams can also act like depots, preserving the last passed value and immediately publishing it to new subscriptions.\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_actions_#getvalue"}),"getValue")," can be used to extract value from stateful streams."),Object(b.b)("h2",{id:"type-parameters"},"Type parameters"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"T"))))),Object(b.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/interfaces/_urx_actions_.publisher"}),"Publisher"),"<","T>")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("p",{parentName:"li"},Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/interfaces/_urx_actions_.emitter"}),"Emitter"),"<","T>"),Object(b.b)("p",{parentName:"li"},"\u21b3 ",Object(b.b)("strong",{parentName:"p"},"StatefulStream")))),Object(b.b)("h2",{id:"callable"},"Callable"),Object(b.b)("p",null,"\u25b8 (",Object(b.b)("inlineCode",{parentName:"p"},"action"),": ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_constants_#subscribe"}),"SUBSCRIBE")," ","|"," ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_constants_#publish"}),"PUBLISH")," ","|"," ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_constants_#reset"}),"RESET")," ","|"," ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_constants_#value"}),"VALUE"),"): any"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/petyosi/react-virtuoso/blob/561fb7f/src/urx/actions.ts#L65"}),"urx/actions.ts:65"))),Object(b.b)("p",null,"Just like ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/interfaces/_urx_actions_.stream"}),"streams"),", stateful streams present both input and output ends of a stream.\nA single stream instance can be both subscribed to and published in.\nStateful Streams can also act like depots, preserving the last passed value and immediately publishing it to new subscriptions.\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_actions_#getvalue"}),"getValue")," can be used to extract value from stateful streams."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"internal"))," "),Object(b.b)("h4",{id:"parameters"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"action")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/api/modules/_urx_constants_#subscribe"}),"SUBSCRIBE")," ","|"," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/api/modules/_urx_constants_#publish"}),"PUBLISH")," ","|"," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/api/modules/_urx_constants_#reset"}),"RESET")," ","|"," ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/api/modules/_urx_constants_#value"}),"VALUE"))))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," any"),Object(b.b)("p",null,"\u25b8 (",Object(b.b)("inlineCode",{parentName:"p"},"action"),": ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_constants_#publish"}),"PUBLISH"),", ",Object(b.b)("inlineCode",{parentName:"p"},"value"),": T): void"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/petyosi/react-virtuoso/blob/561fb7f/src/urx/actions.ts#L12"}),"urx/actions.ts:12"))),Object(b.b)("p",null,"Just like ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/interfaces/_urx_actions_.stream"}),"streams"),", stateful streams present both input and output ends of a stream.\nA single stream instance can be both subscribed to and published in.\nStateful Streams can also act like depots, preserving the last passed value and immediately publishing it to new subscriptions.\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_actions_#getvalue"}),"getValue")," can be used to extract value from stateful streams."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"internal"))," "),Object(b.b)("h4",{id:"parameters-1"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"action")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/api/modules/_urx_constants_#publish"}),"PUBLISH"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"T")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," void"),Object(b.b)("p",null,"\u25b8 (",Object(b.b)("inlineCode",{parentName:"p"},"action"),": ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_constants_#subscribe"}),"SUBSCRIBE"),", ",Object(b.b)("inlineCode",{parentName:"p"},"subscription"),": ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/interfaces/_urx_actions_.subscription"}),"Subscription"),"<","T>): ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/interfaces/_urx_actions_.unsubscribe"}),"Unsubscribe")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/petyosi/react-virtuoso/blob/561fb7f/src/urx/actions.ts#L21"}),"urx/actions.ts:21"))),Object(b.b)("p",null,"Just like ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/interfaces/_urx_actions_.stream"}),"streams"),", stateful streams present both input and output ends of a stream.\nA single stream instance can be both subscribed to and published in.\nStateful Streams can also act like depots, preserving the last passed value and immediately publishing it to new subscriptions.\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_actions_#getvalue"}),"getValue")," can be used to extract value from stateful streams."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"internal"))," "),Object(b.b)("h4",{id:"parameters-2"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"action")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/api/modules/_urx_constants_#subscribe"}),"SUBSCRIBE"))),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"subscription")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/api/interfaces/_urx_actions_.subscription"}),"Subscription"),"<","T>")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/interfaces/_urx_actions_.unsubscribe"}),"Unsubscribe")),Object(b.b)("p",null,"\u25b8 (",Object(b.b)("inlineCode",{parentName:"p"},"action"),": ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_constants_#reset"}),"RESET"),"): void"),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Defined in ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"https://github.com/petyosi/react-virtuoso/blob/561fb7f/src/urx/actions.ts#L23"}),"urx/actions.ts:23"))),Object(b.b)("p",null,"Just like ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/interfaces/_urx_actions_.stream"}),"streams"),", stateful streams present both input and output ends of a stream.\nA single stream instance can be both subscribed to and published in.\nStateful Streams can also act like depots, preserving the last passed value and immediately publishing it to new subscriptions.\n",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/api/modules/_urx_actions_#getvalue"}),"getValue")," can be used to extract value from stateful streams."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"internal"))," "),Object(b.b)("h4",{id:"parameters-3"},"Parameters:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"action")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/api/modules/_urx_constants_#reset"}),"RESET"))))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," void"))}p.isMDXComponent=!0},187:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return O}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,O=u["".concat(c,".").concat(m)]||u[m]||o[m]||b;return a?r.a.createElement(O,s(s({ref:t},l),{},{components:a})):r.a.createElement(O,s({ref:t},l))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,c=new Array(b);c[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,c[1]=s;for(var l=2;l<b;l++)c[l]=a[l];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);