(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{153:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return m}));var r=t(0),o=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=o.a.createContext({}),c=function(e){var n=o.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return o.a.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},f=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),f=r,m=p["".concat(a,".").concat(f)]||p[f]||d[f]||i;return t?o.a.createElement(m,s(s({ref:n},u),{},{components:t})):o.a.createElement(m,s({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=f;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var u=2;u<i;u++)a[u]=t[u];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},70:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return s})),t.d(n,"rightToc",(function(){return l})),t.d(n,"default",(function(){return c}));var r=t(2),o=t(6),i=(t(0),t(153)),a={id:"scroll-to-group",title:"Scroll to Group",sidebar_label:"Scroll to Group",slug:"/scroll-to-group/"},s={unversionedId:"scroll-to-group",id:"scroll-to-group",isDocsHomePage:!1,title:"Scroll to Group",description:"This example re-creates the UI of the iOS contacts listview.",source:"@site/docs/scroll-to-group.md",slug:"/scroll-to-group/",permalink:"/scroll-to-group/",editUrl:"https://github.com/petyosi/react-virtuoso/edit/master/site/docs/scroll-to-group.md",version:"current",sidebar_label:"Scroll to Group",sidebar:"someSidebar",previous:{title:"Grouped Load on Demand",permalink:"/grouped-with-load-on-demand/"},next:{title:"Table Virtuoso Basic Example",permalink:"/hello-table/"}},l=[],u={rightToc:l};function c(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This example re-creates the UI of the iOS contacts listview. "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"() => {\n  const { users, groups, groupCounts } = generateGroupedUsers(500)\n  const virtuoso = useRef(null)\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <GroupedVirtuoso\n          ref={virtuoso}\n          groupCounts={groupCounts}\n          groupContent={index => {\n          return <div style={{ \n            backgroundColor: 'var(--ifm-background-color)', \n            padding: '0.3rem 1rem'\n          }}>{groups[index]}</div>\n          }}\n          itemContent={index => {\n            return <div style={{ padding: '0.5rem 1rem', backgroundColor: toggleBg(index) }}>\n            <h4>{users[index].name}</h4>\n\n            <p style={{ marginBottom: 0 }}>{users[index].description}</p>\n            </div>\n          }}\n        />\n      </div>\n\n      <ul\n        style={{\n          marginLeft: '0.5rem',\n          paddingLeft: '0',\n          listStyle: 'none',\n          fontSize: '0.8rem',\n        }}\n      >\n        {groupCounts\n          .reduce(\n            ({ firstItemsIndexes, offset }, count) => {\n              return {\n                firstItemsIndexes: [...firstItemsIndexes, offset],\n                offset: offset + count,\n              }\n            },\n            { firstItemsIndexes: [], offset: 0 }\n          )\n          .firstItemsIndexes.map((itemIndex, index) => (\n            <li key={index}>\n              <a\n                href=\"#\"\n                onClick={e => {\n                  e.preventDefault()\n                  virtuoso.current.scrollToIndex({\n                    index: itemIndex,\n                  })\n                }}\n              >\n                {groups[index]}\n              </a>\n            </li>\n          ))}\n      </ul>\n    </div>\n  )\n}\n")))}c.isMDXComponent=!0}}]);