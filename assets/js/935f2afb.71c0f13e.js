"use strict";(self.webpackChunkreact_virtuoso=self.webpackChunkreact_virtuoso||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"defaultSidebar":[{"type":"link","label":"Getting Started","href":"/","docId":"getting-started"},{"type":"link","label":"Troubleshooting","href":"/troubleshooting","docId":"troubleshooting"},{"type":"category","label":"Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"100,000 Items","href":"/hello/","docId":"basics/hello"},{"type":"link","label":"Auto Resizing","href":"/auto-resizing/","docId":"basics/auto-resizing"},{"type":"link","label":"Footer","href":"/footer/","docId":"basics/footer"},{"type":"link","label":"Initial Index","href":"/initial-index/","docId":"basics/initial-index"},{"type":"link","label":"Range Change Callback","href":"/range-change-callback/","docId":"basics/range-change-callback"},{"type":"link","label":"Scroll Handling","href":"/scroll-handling/","docId":"basics/scroll-handling"},{"type":"link","label":"Scroll to Index","href":"/scroll-to-index/","docId":"basics/scroll-to-index"},{"type":"link","label":"Top Items","href":"/top-items/","docId":"basics/top-items"}]},{"type":"category","label":"Grouped Mode","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Grouped Numbers","href":"/grouped-numbers/","docId":"grouped-mode/grouped-numbers"},{"type":"link","label":"Grouped by First Letter","href":"/grouped-by-first-letter/","docId":"grouped-mode/grouped-by-first-letter"},{"type":"link","label":"Load on Demand","href":"/grouped-with-load-on-demand/","docId":"grouped-mode/grouped-with-load-on-demand"},{"type":"link","label":"Scroll to Group","href":"/scroll-to-group/","docId":"grouped-mode/scroll-to-group"}]},{"type":"category","label":"Table","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Example","href":"/hello-table/","docId":"table/hello-table"},{"type":"link","label":"Material UI Table","href":"/mui-table-virtual-scroll/","docId":"table/mui-table-virtual-scroll"},{"type":"link","label":"React Table","href":"/react-table-integration/","docId":"table/react-table-integration"},{"type":"link","label":"Fixed Headers","href":"/table-fixed-headers/","docId":"table/table-fixed-headers"},{"type":"link","label":"Fixed Columns","href":"/table-fixed-columns/","docId":"table/table-fixed-columns"}]},{"type":"category","label":"Grid","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Responsive Columns","href":"/grid-responsive-columns/","docId":"grid/grid-responsive-columns"}]},{"type":"category","label":"Scenarios","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Endless Scrolling","href":"/endless-scrolling/","docId":"scenarios/endless-scrolling"},{"type":"link","label":"Keyboard Navigation","href":"/keyboard-navigation/","docId":"scenarios/keyboard-navigation"},{"type":"link","label":"MUI List","href":"/material-ui-endless-scrolling/","docId":"scenarios/material-ui-endless-scrolling"},{"type":"link","label":"Mocking in tests","href":"/mocking-in-tests/","docId":"scenarios/mocking-in-tests"},{"type":"link","label":"Prepending Items","href":"/prepend-items/","docId":"scenarios/prepend-items"},{"type":"link","label":"Press to Load More","href":"/press-to-load-more/","docId":"scenarios/press-to-load-more"},{"type":"link","label":"RB DND + Window Scroller","href":"/react-beautiful-dnd-window-scroller/","docId":"scenarios/react-beautiful-dnd-window-scroller"},{"type":"link","label":"React Beautiful DND","href":"/react-beautiful-dnd/","docId":"scenarios/react-beautiful-dnd"},{"type":"link","label":"React Sortable HOC","href":"/react-sortable-hoc/","docId":"scenarios/react-sortable-hoc"},{"type":"link","label":"Scroll Seek Placeholders","href":"/scroll-seek-placeholders/","docId":"scenarios/scroll-seek-placeholders"},{"type":"link","label":"Stick to Bottom","href":"/stick-to-bottom/","docId":"scenarios/stick-to-bottom"},{"type":"link","label":"Window Scrolling","href":"/window-scrolling/","docId":"scenarios/window-scrolling"}]},{"type":"category","label":"Customize Markup","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Customize Scroller","href":"/custom-scroll-container/","docId":"customize-markup/custom-scroll-container"},{"type":"link","label":"Customize Rendering","href":"/customize-structure/","docId":"customize-markup/customize-structure"}]},{"type":"category","label":"API Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Virtuoso","href":"/virtuoso-api-reference/","docId":"api-reference/virtuoso-api-reference"},{"type":"link","label":"Table Virtuoso","href":"/table-virtuoso-api-reference/","docId":"api-reference/table-virtuoso-api-reference"},{"type":"link","label":"Virtuoso Grid","href":"/virtuoso-grid-api-reference/","docId":"api-reference/virtuoso-grid-api-reference"}]},{"type":"link","label":"Migrate from v0 to v1","href":"/migrate-v0-to-v1/","docId":"migrate-v0-to-v1"}]},"docs":{"api-reference/table-virtuoso-api-reference":{"id":"api-reference/table-virtuoso-api-reference","title":"Table Virtuoso API Reference","description":"All properties are optional - by default, the component will render empty.","sidebar":"defaultSidebar"},"api-reference/virtuoso-api-reference":{"id":"api-reference/virtuoso-api-reference","title":"Virtuoso API Reference","description":"All properties are optional - by default, the component will render empty. Under the hood, both Virtuoso and GroupedVirtuoso are the same component - the only difference is that they have different TypeScript interfaces applied.","sidebar":"defaultSidebar"},"api-reference/virtuoso-grid-api-reference":{"id":"api-reference/virtuoso-grid-api-reference","title":"Virtuoso Grid API Reference","description":"All properties are optional - by default, the component will render empty.","sidebar":"defaultSidebar"},"api/enums/LogLevel":{"id":"api/enums/LogLevel","title":"Enumeration: LogLevel","description":"Enumeration Members"},"api/index":{"id":"api/index","title":"react-virtuoso","description":"npm version"},"api/interfaces/CalculateViewLocationParams":{"id":"api/interfaces/CalculateViewLocationParams","title":"Interface: CalculateViewLocationParams","description":"Properties"},"api/interfaces/Components":{"id":"api/interfaces/Components","title":"Interface: Components<Data, Context>","description":"Customize the Virtuoso rendering by passing a set of custom components."},"api/interfaces/ComputeItemKey":{"id":"api/interfaces/ComputeItemKey","title":"Interface: ComputeItemKey<D, C>","description":"Type parameters"},"api/interfaces/FillerRowProps":{"id":"api/interfaces/FillerRowProps","title":"Interface: FillerRowProps","description":"Passed to the Components.FillerRow custom component"},"api/interfaces/FlatIndexLocationWithAlign":{"id":"api/interfaces/FlatIndexLocationWithAlign","title":"Interface: FlatIndexLocationWithAlign","description":"Hierarchy"},"api/interfaces/FlatScrollIntoViewLocation":{"id":"api/interfaces/FlatScrollIntoViewLocation","title":"Interface: FlatScrollIntoViewLocation","description":"Hierarchy"},"api/interfaces/GridComponents":{"id":"api/interfaces/GridComponents","title":"Interface: GridComponents<Context>","description":"Type parameters"},"api/interfaces/GridComputeItemKey":{"id":"api/interfaces/GridComputeItemKey","title":"Interface: GridComputeItemKey<D, C>","description":"Type parameters"},"api/interfaces/GridItem":{"id":"api/interfaces/GridItem","title":"Interface: GridItem<D>","description":"Type parameters"},"api/interfaces/GridItemContent":{"id":"api/interfaces/GridItemContent","title":"Interface: GridItemContent<D, C>","description":"Type parameters"},"api/interfaces/GridItemProps":{"id":"api/interfaces/GridItemProps","title":"Interface: GridItemProps","description":"Properties"},"api/interfaces/GridScrollSeekPlaceholderProps":{"id":"api/interfaces/GridScrollSeekPlaceholderProps","title":"Interface: GridScrollSeekPlaceholderProps","description":"Passed to the GridComponents.ScrollSeekPlaceholder custom component"},"api/interfaces/GroupContent":{"id":"api/interfaces/GroupContent","title":"Interface: GroupContent<C>","description":"Type parameters"},"api/interfaces/GroupedScrollIntoViewLocation":{"id":"api/interfaces/GroupedScrollIntoViewLocation","title":"Interface: GroupedScrollIntoViewLocation","description":"Hierarchy"},"api/interfaces/GroupedVirtuosoHandle":{"id":"api/interfaces/GroupedVirtuosoHandle","title":"Interface: GroupedVirtuosoHandle","description":"Methods"},"api/interfaces/GroupedVirtuosoProps":{"id":"api/interfaces/GroupedVirtuosoProps","title":"Interface: GroupedVirtuosoProps<D, C>","description":"Type parameters"},"api/interfaces/GroupIndexLocationWithAlign":{"id":"api/interfaces/GroupIndexLocationWithAlign","title":"Interface: GroupIndexLocationWithAlign","description":"Hierarchy"},"api/interfaces/GroupItem":{"id":"api/interfaces/GroupItem","title":"Interface: GroupItem<D>","description":"Type parameters"},"api/interfaces/GroupItemContent":{"id":"api/interfaces/GroupItemContent","title":"Interface: GroupItemContent<D, C>","description":"Type parameters"},"api/interfaces/Item":{"id":"api/interfaces/Item","title":"Interface: Item<D>","description":"Type parameters"},"api/interfaces/ItemContent":{"id":"api/interfaces/ItemContent","title":"Interface: ItemContent<D, C>","description":"Type parameters"},"api/interfaces/ListRange":{"id":"api/interfaces/ListRange","title":"Interface: ListRange","description":"Properties"},"api/interfaces/LocationOptions":{"id":"api/interfaces/LocationOptions","title":"Interface: LocationOptions","description":"Hierarchy"},"api/interfaces/RecordItem":{"id":"api/interfaces/RecordItem","title":"Interface: RecordItem<D>","description":"Type parameters"},"api/interfaces/ScrollContainerState":{"id":"api/interfaces/ScrollContainerState","title":"Interface: ScrollContainerState","description":"Properties"},"api/interfaces/ScrollIntoViewLocationOptions":{"id":"api/interfaces/ScrollIntoViewLocationOptions","title":"Interface: ScrollIntoViewLocationOptions","description":"Hierarchy"},"api/interfaces/ScrollSeekConfiguration":{"id":"api/interfaces/ScrollSeekConfiguration","title":"Interface: ScrollSeekConfiguration","description":"Properties"},"api/interfaces/ScrollSeekPlaceholderProps":{"id":"api/interfaces/ScrollSeekPlaceholderProps","title":"Interface: ScrollSeekPlaceholderProps","description":"Passed to the Components.ScrollSeekPlaceholder custom component"},"api/interfaces/ScrollSeekToggle":{"id":"api/interfaces/ScrollSeekToggle","title":"Interface: ScrollSeekToggle","description":"Callable"},"api/interfaces/SizeRange":{"id":"api/interfaces/SizeRange","title":"Interface: SizeRange","description":"Properties"},"api/interfaces/StateSnapshot":{"id":"api/interfaces/StateSnapshot","title":"Interface: StateSnapshot","description":"Properties"},"api/interfaces/TableComponents":{"id":"api/interfaces/TableComponents","title":"Interface: TableComponents<Data, Context>","description":"Customize the TableVirtuoso rendering by passing a set of custom components."},"api/interfaces/TableVirtuosoHandle":{"id":"api/interfaces/TableVirtuosoHandle","title":"Interface: TableVirtuosoHandle","description":"Methods"},"api/interfaces/TableVirtuosoProps":{"id":"api/interfaces/TableVirtuosoProps","title":"Interface: TableVirtuosoProps<D, C>","description":"Type parameters"},"api/interfaces/VirtuosoGridHandle":{"id":"api/interfaces/VirtuosoGridHandle","title":"Interface: VirtuosoGridHandle","description":"Methods"},"api/interfaces/VirtuosoGridMockContextValue":{"id":"api/interfaces/VirtuosoGridMockContextValue","title":"Interface: VirtuosoGridMockContextValue","description":"Properties"},"api/interfaces/VirtuosoGridProps":{"id":"api/interfaces/VirtuosoGridProps","title":"Interface: VirtuosoGridProps<D, C>","description":"Type parameters"},"api/interfaces/VirtuosoHandle":{"id":"api/interfaces/VirtuosoHandle","title":"Interface: VirtuosoHandle","description":"Methods"},"api/interfaces/VirtuosoMockContextValue":{"id":"api/interfaces/VirtuosoMockContextValue","title":"Interface: VirtuosoMockContextValue","description":"Properties"},"api/interfaces/VirtuosoProps":{"id":"api/interfaces/VirtuosoProps","title":"Interface: VirtuosoProps<D, C>","description":"Type parameters"},"api/interfaces/WindowViewportInfo":{"id":"api/interfaces/WindowViewportInfo","title":"Interface: WindowViewportInfo","description":"Properties"},"api/modules":{"id":"api/modules","title":"react-virtuoso","description":"Enumerations"},"basics/auto-resizing":{"id":"basics/auto-resizing","title":"Auto Resizing Virtual List","description":"The Virtuoso component automatically handles any changes of the items\' heights (due to content resizing, images loading, etc.)","sidebar":"defaultSidebar"},"basics/footer":{"id":"basics/footer","title":"List with Footer Example","description":"Customize the Virtuoso component rendering by passing components through the components property.","sidebar":"defaultSidebar"},"basics/hello":{"id":"basics/hello","title":"Virtual List With 100,000 Items","description":"The Virtuoso component is designed to render huge lists with unknown item sizes.","sidebar":"defaultSidebar"},"basics/initial-index":{"id":"basics/initial-index","title":"Start from a certain item","description":"The initialTopMostItemIndex property changes the initial location of the list to display the item at the specified index. You can pass in an object to achieve additional effects similar to scrollToIndex.","sidebar":"defaultSidebar"},"basics/range-change-callback":{"id":"basics/range-change-callback","title":"Range Change Callback","description":"The rangeChanged callback property gets called with the start/end indexes of the visible range.","sidebar":"defaultSidebar"},"basics/scroll-handling":{"id":"basics/scroll-handling","title":"Scroll Handling","description":"Loading and rendering complex content while scrolling affects the scrolling performance.","sidebar":"defaultSidebar"},"basics/scroll-to-index":{"id":"basics/scroll-to-index","title":"Scroll to Index","description":"The Virtuoso component exposes an imperative scrollToIndex method, which scrolls the item at the specified index into view.","sidebar":"defaultSidebar"},"basics/top-items":{"id":"basics/top-items","title":"Top Items List Example","description":"The Virtuoso component accepts an optional topItemCount number property that allows you to pin the first several items of the list.","sidebar":"defaultSidebar"},"customize-markup/custom-scroll-container":{"id":"customize-markup/custom-scroll-container","title":"Customize Root Element","description":"The React Virtuoso component accepts the standard set of HTML attributes and passes them to the root scrollable DOM div.","sidebar":"defaultSidebar"},"customize-markup/customize-structure":{"id":"customize-markup/customize-structure","title":"Customize Rendering","description":"The React Virtuoso component renders as several nested DIV elements. The default values in the component prop entries are \\"div\\".","sidebar":"defaultSidebar"},"getting-started":{"id":"getting-started","title":"Getting Started with React Virtuoso","description":"React Virtuoso is a family of powerful yet easy-to-use React components that can render enormous data sets.","sidebar":"defaultSidebar"},"grid/grid-responsive-columns":{"id":"grid/grid-responsive-columns","title":"Grid with Responsive Columns","description":"The VirtuosoGrid component displays equally-sized items, while supporting multiple items per row.","sidebar":"defaultSidebar"},"grouped-mode/grouped-by-first-letter":{"id":"grouped-mode/grouped-by-first-letter","title":"Grouped by First Letter","description":"Here is a more complex GroupedVirtuoso example displaying 500 users, grouped by the first letter of their name.","sidebar":"defaultSidebar"},"grouped-mode/grouped-numbers":{"id":"grouped-mode/grouped-numbers","title":"Grouped 10,000 numbers","description":"The example below shows a simple grouping mode - 10,000 items in groups of 10.","sidebar":"defaultSidebar"},"grouped-mode/grouped-with-load-on-demand":{"id":"grouped-mode/grouped-with-load-on-demand","title":"Grouped Load on Demand","description":"The GroupedVirtuoso component can have a Footer, that has a \\"load more\\" button that appends more items to the existing ones.","sidebar":"defaultSidebar"},"grouped-mode/scroll-to-group":{"id":"grouped-mode/scroll-to-group","title":"Scroll to Group","description":"This example re-creates the UI of the iOS contacts listview.","sidebar":"defaultSidebar"},"migrate-v0-to-v1":{"id":"migrate-v0-to-v1","title":"Migrate from v0 to v1","description":"Version 1. of Virtuoso is a complete rewrite from v0., addressing the architectural limitations of the first version and enabling a smooth path to introduce new features.","sidebar":"defaultSidebar"},"scenarios/endless-scrolling":{"id":"scenarios/endless-scrolling","title":"Endless Scrolling","description":"The React Virtuoso component makes it trivial to implement infinite scrolling lists in both directions with variably sized items.","sidebar":"defaultSidebar"},"scenarios/keyboard-navigation":{"id":"scenarios/keyboard-navigation","title":"Keyboard Navigation","description":"The Virtuoso component exposes an imperative scrollIntoView method, which makes it easy to implement keyboard navigation.","sidebar":"defaultSidebar"},"scenarios/material-ui-endless-scrolling":{"id":"scenarios/material-ui-endless-scrolling","title":"MUI List","description":"The React Virtuoso component supports customization of its internal components to accommodate styled components from frameworks like MUI.","sidebar":"defaultSidebar"},"scenarios/mocking-in-tests":{"id":"scenarios/mocking-in-tests","title":"Mocking in tests","description":"If you try to use Virtuoso in a testing environment, you\'re likely going to discover that it does not render any items. This is due to rendering being controlled by measuring the height of its DOM elements (the list container and the items themselves).","sidebar":"defaultSidebar"},"scenarios/prepend-items":{"id":"scenarios/prepend-items","title":"Prepending Items","description":"Appending items to the list is straightforward - the items at the bottom do not displace the currently rendered ones.","sidebar":"defaultSidebar"},"scenarios/press-to-load-more":{"id":"scenarios/press-to-load-more","title":"Press to Load More","description":"The components.Footer property can be used to place a \\"load more\\" button that appends more items to the list.","sidebar":"defaultSidebar"},"scenarios/react-beautiful-dnd":{"id":"scenarios/react-beautiful-dnd","title":"React Beautiful DND","description":"The example below integrates React Virtuoso with React Beautiful DND.","sidebar":"defaultSidebar"},"scenarios/react-beautiful-dnd-window-scroller":{"id":"scenarios/react-beautiful-dnd-window-scroller","title":"RB DND + Window Scroller","description":"The example below integrates React Virtuoso with React Beautiful DND and the document scroller.","sidebar":"defaultSidebar"},"scenarios/react-sortable-hoc":{"id":"scenarios/react-sortable-hoc","title":"React Sortable HOC","description":"The example below integrates the library with React Sortable HOC.","sidebar":"defaultSidebar"},"scenarios/scroll-seek-placeholders":{"id":"scenarios/scroll-seek-placeholders","title":"Scroll Seek Placeholders","description":"The scrollSeekConfiguration property allows you to render a placeholder element instead of the actual item if the user scrolls too fast.","sidebar":"defaultSidebar"},"scenarios/stick-to-bottom":{"id":"scenarios/stick-to-bottom","title":"Stick to Bottom","description":"This example \\"follows\\" the live updates of a list by auto-scrolling to the last item when totalCount is increased.","sidebar":"defaultSidebar"},"scenarios/window-scrolling":{"id":"scenarios/window-scrolling","title":"Window Scrolling","description":"The Virtuoso and the VirtuosoGrid components can use the document scroller.","sidebar":"defaultSidebar"},"table/hello-table":{"id":"table/hello-table","title":"Table Virtuoso Basic Example","description":"The TableVirtuoso component can display large tables with unknown row sizes. It has most of the Virtuoso capabilities sans pinning top items. It also supports sticky table headers.","sidebar":"defaultSidebar"},"table/mui-table-virtual-scroll":{"id":"table/mui-table-virtual-scroll","title":"Table Virtuoso with Material UI table","description":"The structure of TableVirtuoso is compatible with the markup of Material UI Table. Notice the adjustment of the borderCollapse styling.","sidebar":"defaultSidebar"},"table/react-table-integration":{"id":"table/react-table-integration","title":"Table Virtuoso integrated with React Table","description":"The following example virtualizes the basic example of React Table. makeData comes from the React Table samples.","sidebar":"defaultSidebar"},"table/table-fixed-columns":{"id":"table/table-fixed-columns","title":"Table Virtuoso Example with Fixed Columns","description":"Setting sticky columns is done entirely through styling.","sidebar":"defaultSidebar"},"table/table-fixed-headers":{"id":"table/table-fixed-headers","title":"Table Virtuoso Example with Fixed Headers","description":"If set, the fixedHeaderContent property specifies the content of the thead element. The header element remains fixed while scrolling.","sidebar":"defaultSidebar"},"troubleshooting":{"id":"troubleshooting","title":"Troubleshooting React Virtuoso","description":"React Virtuoso tries to hide as much complexity as possible while maintaining sensible behavior with any configuration.","sidebar":"defaultSidebar"}}}')}}]);