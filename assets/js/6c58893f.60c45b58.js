"use strict";(self.webpackChunkreact_virtuoso=self.webpackChunkreact_virtuoso||[]).push([[6883],{7942:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var o=r(959);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),a=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=a(e.components);return o.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=a(r),d=n,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||i;return r?o.createElement(f,s(s({ref:t},u),{},{components:r})):o.createElement(f,s({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:n,s[1]=l;for(var a=2;a<i;a++)s[a]=r[a];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4439:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>a,toc:()=>p});var o=r(5882),n=r(950),i=(r(959),r(7942)),s=["components"],l={id:"custom-scroll-container",title:"Customize Root Element",sidebar_label:"Customize Scroller",slug:"/custom-scroll-container/"},c=void 0,a={unversionedId:"customize-markup/custom-scroll-container",id:"customize-markup/custom-scroll-container",title:"Customize Root Element",description:"The React Virtuoso component accepts the standard set of HTML attributes and passes them to the root scrollable DOM div.",source:"@site/docs/customize-markup/custom-scroll-container.md",sourceDirName:"customize-markup",slug:"/custom-scroll-container/",permalink:"/custom-scroll-container/",draft:!1,editUrl:"https://github.com/petyosi/react-virtuoso/edit/master/docs/customize-markup/custom-scroll-container.md",tags:[],version:"current",frontMatter:{id:"custom-scroll-container",title:"Customize Root Element",sidebar_label:"Customize Scroller",slug:"/custom-scroll-container/"},sidebar:"defaultSidebar",previous:{title:"Window Scrolling",permalink:"/window-scrolling/"},next:{title:"Customize Rendering",permalink:"/customize-structure/"}},u={},p=[{value:"List with custom styling",id:"list-with-custom-styling",level:2},{value:"List with custom scroller",id:"list-with-custom-scroller",level:2}],m={toc:p},d="wrapper";function f(e){var t=e.components,r=(0,n.Z)(e,s);return(0,i.kt)(d,(0,o.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The React Virtuoso component accepts the standard set of HTML attributes and passes them to the root scrollable DOM div.\nYou can use this to customize the styling and to bind to DOM events like ",(0,i.kt)("inlineCode",{parentName:"p"},"onScroll"),". If you want to customize the wrapper further, you can pass a custom component as ",(0,i.kt)("inlineCode",{parentName:"p"},"components.Scroller"),"."),(0,i.kt)("h2",{id:"list-with-custom-styling"},"List with custom styling"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"import { Virtuoso } from 'react-virtuoso'\n\nexport default function App() {\n  return (\n    <Virtuoso\n      onScroll={(e) => console.log(e.target.scrollTop)}\n      totalCount={1000}\n      itemContent={(idx) => `Item ${idx}`}\n      style={{\n        border: '5px dashed gray',\n        borderRadius: '4px',\n        height: 400\n      }}\n    />\n  )\n}\n")),(0,i.kt)("p",null,"The example below changes the scroller element with a custom component. This approach is useful for integrating the component with a custom scroller library."),(0,i.kt)("h2",{id:"list-with-custom-scroller"},"List with custom scroller"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"import { Virtuoso } from 'react-virtuoso'\nimport React from 'react'\n\n// do not inline the component, as a fresh instance would be created with each re-render\n// if you need to do some conditional logic, use Virtuoso's context prop to pass props inside the Scroller\nconst Scroller = React.forwardRef(({ style, ...props }, ref) => {\n  // an alternative option to assign the ref is\n  // <div ref={(r) => ref.current = r}>\n  return <div style={{ ...style, border: '5px solid gray' }} ref={ref} {...props} />\n})\n\nexport default function App() {\n  return (\n    <Virtuoso\n      style={{ height: 400 }}\n      onScroll={(e) => console.log(e.target.scrollTop)}\n      totalCount={1000}\n      itemContent={(idx) => `Item ${idx}`}\n      components={{ Scroller }}\n    />\n  )\n}\n")))}f.isMDXComponent=!0}}]);