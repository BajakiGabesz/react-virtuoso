"use strict";(self.webpackChunkreact_virtuoso=self.webpackChunkreact_virtuoso||[]).push([[7740],{7942:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var r=n(959);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),h=o,m=u["".concat(i,".").concat(h)]||u[h]||p[h]||l;return n?r.createElement(m,a(a({ref:t},d),{},{components:n})):r.createElement(m,a({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=h;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<l;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},6952:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var r=n(5882),o=n(950),l=(n(959),n(7942)),a=["components"],s={id:"scroll-seek-placeholders",title:"Scroll Seek Placeholders",sidebar_label:"Scroll Seek Placeholders",slug:"/scroll-seek-placeholders/"},i=void 0,c={unversionedId:"scenarios/scroll-seek-placeholders",id:"scenarios/scroll-seek-placeholders",title:"Scroll Seek Placeholders",description:"The scrollSeekConfiguration property allows you to render a placeholder element instead of the actual item if the user scrolls too fast.",source:"@site/docs/scenarios/scroll-seek-placeholders.md",sourceDirName:"scenarios",slug:"/scroll-seek-placeholders/",permalink:"/scroll-seek-placeholders/",draft:!1,editUrl:"https://github.com/petyosi/react-virtuoso/edit/master/docs/scenarios/scroll-seek-placeholders.md",tags:[],version:"current",frontMatter:{id:"scroll-seek-placeholders",title:"Scroll Seek Placeholders",sidebar_label:"Scroll Seek Placeholders",slug:"/scroll-seek-placeholders/"},sidebar:"defaultSidebar",previous:{title:"React Sortable HOC",permalink:"/react-sortable-hoc/"},next:{title:"Stick to Bottom",permalink:"/stick-to-bottom/"}},d={},u=[],p={toc:u},h="wrapper";function m(e){var t=e.components,n=(0,o.Z)(e,a);return(0,l.kt)(h,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"scrollSeekConfiguration")," property allows you to render a placeholder element instead of the actual item if the user scrolls too fast."),(0,l.kt)("p",null,"This improves scrolling performance and delays the actual load of data from the server."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live include-data",live:!0,"include-data":!0},'import { Virtuoso } from \'react-virtuoso\'\nimport { user, generateUsers, toggleBg } from \'./data\'\nimport { useState, useMemo, useCallback, useEffect, useRef } from \'react\'\n\nexport default function App() {\n  const randomHeights = useMemo(\n    () =>\n      Array(10)\n        .fill(true)\n        .map(() => Math.round(Math.random() * 14) + 1),\n    []\n  );\n\n  const users = useMemo(() => generateUsers(1000), [])\n\n  // use the visible range to provide information\n  // about the list current position.\n  const [visibleRange, setVisibleRange] = useState(["-", "-"]);\n\n  return (\n    <div style={{ display: "flex", flexDirection: \'column\', height: \'100%\' }}>\n      <div>\n        Current visible range:{" "}\n        <div>\n          <strong>\n            {visibleRange[0]} - {visibleRange[1]}\n          </strong>\n        </div>{" "}\n      </div>\n\n      <div style={{ flex: 1 }}>\n        <Virtuoso\n          context={{ randomHeights }}\n          style={{ height: 400 }}\n          data={users}\n          itemContent={(index, user) => <div style={{ backgroundColor: toggleBg(index) }}>{user.name}</div>}\n          components={{ ScrollSeekPlaceholder }}\n          scrollSeekConfiguration={{\n            enter: (velocity) => Math.abs(velocity) > 50,\n            exit: (velocity) => {\n              const shouldExit = Math.abs(velocity) < 10;\n              if (shouldExit) {\n                setVisibleRange(["-", "-"]);\n              }\n              return shouldExit;\n            },\n            change: (_velocity, { startIndex, endIndex }) => setVisibleRange([startIndex, endIndex])\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\n// You can use index to randomize\n// and make the placeholder list more organic.\n// the height passed is the one measured for the real item.\n// the placeholder should be the same size.\nconst ScrollSeekPlaceholder =  ({ height, index, context: { randomHeights }}) => (\n  <div\n    style={{\n      height,\n      padding: "8px",\n      boxSizing: "border-box",\n      overflow: "hidden",\n    }}\n  >\n    <div\n      style={{\n        background: index % 2 ? "blue": "green",\n        height: randomHeights[index % 10],\n      }}\n    ></div>\n  </div>\n)\n\n')))}m.isMDXComponent=!0}}]);