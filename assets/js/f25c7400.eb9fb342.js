"use strict";(self.webpackChunkreact_virtuoso=self.webpackChunkreact_virtuoso||[]).push([[9441],{7942:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>y});var r=t(959);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=r.createContext({}),p=function(e){var n=r.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(a.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(t),u=o,y=c["".concat(a,".").concat(u)]||c[u]||m[u]||i;return t?r.createElement(y,s(s({ref:n},d),{},{components:t})):r.createElement(y,s({ref:n},d))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,s=new Array(i);s[0]=u;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l[c]="string"==typeof e?e:o,s[1]=l;for(var p=2;p<i;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9922:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>y,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var r=t(5882),o=t(950),i=(t(959),t(7942)),s=["components"],l={id:"grid-responsive-columns",title:"Grid with Responsive Columns",sidebar_label:"Responsive Columns",slug:"/grid-responsive-columns/"},a=void 0,p={unversionedId:"grid/grid-responsive-columns",id:"grid/grid-responsive-columns",title:"Grid with Responsive Columns",description:"The VirtuosoGrid component displays equally-sized items, while supporting multiple items per row.",source:"@site/docs/grid/grid-responsive-columns.md",sourceDirName:"grid",slug:"/grid-responsive-columns/",permalink:"/grid-responsive-columns/",draft:!1,editUrl:"https://github.com/petyosi/react-virtuoso/edit/master/docs/grid/grid-responsive-columns.md",tags:[],version:"current",frontMatter:{id:"grid-responsive-columns",title:"Grid with Responsive Columns",sidebar_label:"Responsive Columns",slug:"/grid-responsive-columns/"},sidebar:"defaultSidebar",previous:{title:"Fixed Columns",permalink:"/table-fixed-columns/"},next:{title:"Endless Scrolling",permalink:"/endless-scrolling/"}},d={},c=[{value:"Responsive Layout",id:"responsive-layout",level:3}],m={toc:c},u="wrapper";function y(e){var n=e.components,t=(0,o.Z)(e,s);return(0,i.kt)(u,(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"VirtuosoGrid")," component displays ",(0,i.kt)("strong",{parentName:"p"},"equally-sized items"),", while supporting multiple items per row."),(0,i.kt)("p",null,"The component provides no styling out of the box.\nThe styling and the layout of the items is be specified by passing two properties - ",(0,i.kt)("inlineCode",{parentName:"p"},"itemClassName")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"listClassName"),"."),(0,i.kt)("p",null,"Alternatively, you can use styled components and pass them as ",(0,i.kt)("inlineCode",{parentName:"p"},"components.Item")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"components.List"),"."),(0,i.kt)("p",null,"Either way, it is up to you to implement the layout with Flexbox or CSS grid. You can use plain old CSS or CSS in JS - the example uses Emotion."),(0,i.kt)("h3",{id:"responsive-layout"},"Responsive Layout"),(0,i.kt)("p",null,"You can safely use media queries, ",(0,i.kt)("inlineCode",{parentName:"p"},"min-width"),", percentages, etc. In the item layout definitions.\nThe grid observes the container/item dimensions and recalculates the scroll size accordingly."),(0,i.kt)("p",null,"Load the example below in codesandbox, resize, and scroll around - the items reposition correctly."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live import=@emotion/styled",live:!0,import:"@emotion/styled"},"import { VirtuosoGrid } from 'react-virtuoso'\nimport styled from '@emotion/styled'\n\nconst ItemContainer = styled.div`\n  padding: 0.5rem;\n  width: 33%;\n  display: flex;\n  flex: none;\n  align-content: stretch;\n  box-sizing: border-box;\n\n  @media (max-width: 1024px) {\n    width: 50%;\n  }\n\n  @media (max-width: 300px) {\n    width: 100%;\n  }\n`\n\nconst ItemWrapper = styled.div`\n  flex: 1;\n  text-align: center;\n  font-size: 80%;\n  padding: 1rem 1rem;\n  border: 1px solid var(gray);\n  white-space: nowrap;\n`\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nexport default function App() {\n  return (\n  <>\n    <VirtuosoGrid\n    style={{ height: 400 }}\n      totalCount={10000}\n      overscan={200}\n      components={{\n        Item: ItemContainer,\n        List: ListContainer,\n        ScrollSeekPlaceholder: ({ height, width, index }) => (\n          <ItemContainer>\n            <ItemWrapper>{'--'}</ItemWrapper>\n          </ItemContainer>\n        ),\n      }}\n      itemContent={index => <ItemWrapper>Item {index}</ItemWrapper>}\n      scrollSeekConfiguration={{\n        enter: velocity => Math.abs(velocity) > 200,\n        exit: velocity => Math.abs(velocity) < 30,\n        change: (_, range) => console.log({ range }),\n      }}\n    />\n    <style>{`html, body, #root { margin: 0; padding: 0 }`}</style>\n  </>\n  )\n}\n")))}y.isMDXComponent=!0}}]);