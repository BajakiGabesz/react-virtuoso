"use strict";(self.webpackChunkreact_virtuoso=self.webpackChunkreact_virtuoso||[]).push([[1905],{3576:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(959);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),a=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=a(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=a(r),f=o,m=p["".concat(u,".").concat(f)]||p[f]||d[f]||i;return r?n.createElement(m,l(l({ref:t},c),{},{components:r})):n.createElement(m,l({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,l=new Array(i);l[0]=f;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[p]="string"==typeof e?e:o,l[1]=s;for(var a=2;a<i;a++)l[a]=r[a];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},5644:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>m,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var n=r(2564),o=r(3102),i=(r(959),r(3576)),l=["components"],s={id:"scroll-to-group",title:"Scroll to Group",sidebar_label:"Scroll to Group",slug:"/scroll-to-group/"},u=void 0,a={unversionedId:"grouped-mode/scroll-to-group",id:"grouped-mode/scroll-to-group",title:"Scroll to Group",description:"This example re-creates the UI of the iOS contacts listview.",source:"@site/docs/grouped-mode/scroll-to-group.md",sourceDirName:"grouped-mode",slug:"/scroll-to-group/",permalink:"/scroll-to-group/",draft:!1,editUrl:"https://github.com/petyosi/react-virtuoso/edit/master/docs/grouped-mode/scroll-to-group.md",tags:[],version:"current",frontMatter:{id:"scroll-to-group",title:"Scroll to Group",sidebar_label:"Scroll to Group",slug:"/scroll-to-group/"},sidebar:"defaultSidebar",previous:{title:"Load on Demand",permalink:"/grouped-with-load-on-demand/"},next:{title:"Basic Example",permalink:"/hello-table/"}},c={},p=[],d={toc:p},f="wrapper";function m(e){var t=e.components,r=(0,o.Z)(e,l);return(0,i.kt)(f,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This example re-creates the UI of the iOS contacts listview. "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live include-data",live:!0,"include-data":!0},"import { GroupedVirtuoso } from 'react-virtuoso'\nimport { useCallback, useState, useRef, useEffect, useMemo } from 'react'\nimport { generateGroupedUsers, toggleBg } from './data'\n\nexport default function App() {\n  const { users, groups, groupCounts } = generateGroupedUsers(500)\n  const virtuoso = useRef(null)\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <div style={{ flex: 1 }}>\n        <GroupedVirtuoso\n          ref={virtuoso}\n          groupCounts={groupCounts}\n          groupContent={index => {\n          return <div style={{ \n            backgroundColor: 'white', \n            padding: '0.3rem 1rem'\n          }}>{groups[index]}</div>\n          }}\n          itemContent={index => {\n            return <div style={{ padding: '0.5rem 1rem', backgroundColor: toggleBg(index) }}>\n            <h4>{users[index].name}</h4>\n\n            <p style={{ marginBottom: 0 }}>{users[index].description}</p>\n            </div>\n          }}\n        />\n      </div>\n\n      <ul\n        style={{\n          marginLeft: '0.5rem',\n          paddingLeft: '0',\n          listStyle: 'none',\n          fontSize: '0.8rem',\n        }}\n      >\n        {groupCounts\n          .reduce(\n            ({ firstItemsIndexes, offset }, count) => {\n              return {\n                firstItemsIndexes: [...firstItemsIndexes, offset],\n                offset: offset + count,\n              }\n            },\n            { firstItemsIndexes: [], offset: 0 }\n          )\n          .firstItemsIndexes.map((itemIndex, index) => (\n            <li key={index}>\n              <a\n                href=\"#\"\n                onClick={e => {\n                  e.preventDefault()\n                  virtuoso.current.scrollToIndex({\n                    index: itemIndex,\n                  })\n                }}\n              >\n                {groups[index]}\n              </a>\n            </li>\n          ))}\n      </ul>\n    </div>\n  )\n}\n")))}m.isMDXComponent=!0}}]);